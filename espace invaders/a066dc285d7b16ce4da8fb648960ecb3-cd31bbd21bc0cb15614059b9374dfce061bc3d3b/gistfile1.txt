// >>>>>  T-I-N-Y  S-P-A-C-E   I-N-V-A-D-E-R-S for ATTINY85  GPL v3 <<<<
//                  Programmer: Daniel Champagne 2018
//                 Contact EMAIL: phoenixbozo@gmail.com
//           https://sites.google.com/view/arduino-collection

//  Tiny Space Invaders is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.

//  You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

//the code work at 16MHZ internal
//and use ssd1306xled Library for SSD1306 oled display 128x64
//#include <avr/pgmspace.h>

typedef struct SPACE {
  int8_t UFOxPos = -120;
  uint8_t oneFrame = 0;
  uint8_t MonsterShoot[2][1] = {{16}, {16}};
  int8_t MonsterGrid[5][6] = {{0, 0, 0, 0, 0, 0}\
    , {2, 2, 2, 2, 2, 2}\
    , {4, 4, 4, 4, 4, 4}\
    , {4, 4, 4, 4, 4, 4}\
    , { -1, -1, -1, -1, -1, -1}
  };
  uint8_t Shield[6] = {0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111};
  uint8_t ScrBackV = 52;
  int8_t MyShootBall = -1;
  uint8_t MyShootBallxpos = 0;
  uint8_t MyShootBallFrame = 0;
  uint8_t anim = 0;
  uint8_t frame = 0;
  uint8_t PositionDansGrilleMonsterX = 0;
  uint8_t PositionDansGrilleMonsterY = 0;
  uint8_t MonsterFloorMax = 3;
  uint8_t MonsterOffsetGauche = 0;
  uint8_t MonsterOffsetDroite = 44;
  uint8_t MonsterGroupeXpos = 0;
  uint8_t MonsterGroupeYpos = 0;
  uint8_t DecalageY8 = 0;
  uint8_t frameMax = 8;
  uint8_t Direction = 1; //1 right 0 gauche
} SPACE;

const int8_t MonstersLevels [] PROGMEM =  {
  0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, \
  4, 4, 4, 4, 4, 4, 4, 2, 0, 0, 2, 4, 4, 2, 0, 0, 2, 4, 4, 4, 4, 4, 4, 4, \
  -1, 0, 0, 0, 0, -1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, -1, 4, 4, 4, 4, -1, \
  0, -1, 0, 0, -1, 0, 2, -1, 2, 2, -1, 2, 4, -1, 4, 4, -1, 4, 4, -1, 4, 4, -1, 4, \
  -1, -1, 2, 2, -1, -1, 0, 2, 2, 2, 2, 0, 2, 4, 2, 2, 4, 2, 2, -1, -1, -1, -1, 2, \
  4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \
  -1, 0, 0, 0, 0, -1, 2, -1, -1, -1, -1, 2, 4, -1, -1, -1, -1, 4, -1, 4, 4, 4, 4, -1, \
  4, -1, 4, -1, 4, -1, -1, 4, -1, 4, -1, 4, 4, -1, 4, -1, 4, -1, -1, 4, -1, 4, -1, 4, \
  -1, -1, 0, 0, -1, -1, 2, 2, 4, 4, 2, 2, 2, 2, 4, 4, 2, 2, -1, -1, 0, 0, -1, -1, \
  0, 0, 4, 4, 2, 2, 0, 0, 4, 4, 2, 2, 0, 0, 4, 4, 2, 2, 0, 0, 4, 4, 2, 2, \
};

const uint8_t LIVE [] PROGMEM =  {0x80, 0xC0, 0x80, 0x00, 0x00, 0x80, 0xC0, 0x80, 0x00, 0x00, 0x80, 0xC0, 0x80, 0x00, 0x00,
                                 };
const uint8_t SHOOT [] PROGMEM =  {0b11110000, 0b00001111};

const uint8_t Monsters [] PROGMEM =  {
  0x00, 0x00, 0x00, 0x58, 0xBC, 0x16, 0x3F, 0x3F, 0x16, 0xBC, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x98, 0x5C, 0xB6, 0x5F, 0x5F, 0xB6, 0x5C, 0x98, 0x00, 0x00, 0x00, 0x00, 0x70, 0x18, 0x7D,
  0xB6, 0xBC, 0x3C, 0x3C, 0xBC, 0xB6, 0x7D, 0x18, 0x70, 0x00, 0x00, 0x1E, 0xB8, 0x7D, 0x36, 0x3C,
  0x3C, 0x3C, 0x3C, 0x36, 0x7D, 0xB8, 0x1E, 0x00, 0x00, 0x9C, 0x9E, 0x5E, 0x76, 0x37, 0x5F, 0x5F,
  0x37, 0x76, 0x5E, 0x9E, 0x9C, 0x00, 0x00, 0x1C, 0x5E, 0xFE, 0xB6, 0x37, 0x5F, 0x5F, 0x37, 0xB6,
  0xFE, 0x5E, 0x1C, 0x00, 0x00, 0x40, 0x60, 0xF0, 0x50, 0x78, 0x58, 0x58, 0x78, 0x50, 0xF0, 0x60,
  0x40, 0x00, 0x00, 0x40, 0x60, 0xD0, 0x70, 0x58, 0x78, 0x78, 0x58, 0x70, 0xD0, 0x60, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x18, 0x18, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x81, 0x00, 0x24, 0x18, 0x18, 0x24, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x81,
  0x18, 0x24, 0x5A, 0x5A, 0x24, 0x18, 0x81, 0x24, 0x00, 0x00, 0x42, 0x00, 0x24, 0x81, 0x4A, 0x3C,
  0xA4, 0x25, 0x3C, 0x4A, 0x81, 0x24, 0x00, 0x42,
};

const uint8_t vesso [] PROGMEM =  {0x70, 0x78, 0x78, 0x78, 0x78, 0x7E, 0x7F, 0x7E, 0x78, 0x78, 0x78, 0x78, 0x70, 0x54, 0xD1, 0xB4,
                                   0x78, 0x3C, 0xF0, 0x34, 0xF8, 0x80, 0x78, 0xEA, 0xE0, 0x74,
                                  };

const uint8_t  back [] PROGMEM = {
  0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0x3F, 0x5F, 0x1F, 0xCF, 0x2F, 0xC7, 0xBF, 0xE7, 0x7F, 0xEF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xC0, 0x14, 0xE9, 0xF6, 0xBD, 0xEF, 0xFD, 0xFF, 0xFD, 0xFF, 0xBF, 0xFF, 0xD7, 0x7F, 0xDF, 0xBF,
  0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFE, 0xFF, 0xFD, 0xF7, 0xFF, 0xF7, 0xFF, 0xF7, 0xFF, 0xFD, 0xFF, 0xFF, 0xFD, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0x7F, 0x1F, 0xBF, 0x0F, 0x47,
  0x8F, 0x23, 0x47, 0x93, 0x43, 0xB5, 0x4B, 0xA3, 0xDB, 0xA5, 0xDB, 0xB3, 0xE7, 0x5B, 0xF7, 0xAF,
  0xF7, 0x6F, 0xFF, 0xDF, 0xFF, 0x5F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0x0F, 0x43, 0x15, 0x02, 0x50, 0x04, 0xA2, 0x18, 0xE2, 0x0C, 0xF2,
  0x0C, 0xF3, 0xAC, 0xDA, 0xF5, 0xBA, 0xED, 0x7A, 0xEF, 0xDA, 0xBF, 0xF6, 0xFF, 0xEF, 0xFD, 0xF7,
  0x7F, 0xFF, 0xED, 0xFF, 0x7F, 0xFB, 0xBF, 0xFE, 0xDF, 0x7D, 0xF7, 0xDF, 0xFF, 0xBF, 0xFF, 0xFF,
  0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0x11, 0x24, 0x08, 0x52, 0x00, 0x55, 0x28, 0xC3, 0x1C, 0xD1, 0xB6, 0x4D, 0xFA, 0x57,
  0xFD, 0xD7, 0x6E, 0xFB, 0xEE, 0x77, 0xDF, 0xF5, 0xDF, 0xFB, 0xFD, 0xBF, 0xFA, 0xFF, 0xFD, 0xFF,
  0xFD, 0x7F, 0xFE, 0xBF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFE, 0xAB, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF,
  0xFF, 0xF7, 0xFF, 0xF7, 0xFF, 0xB6, 0xD5, 0xF7, 0x80, 0xF7, 0xD5, 0xB6, 0xFF, 0xF7, 0xFF, 0xF7,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xF6, 0x48, 0xA1, 0x14, 0x49, 0xA6, 0x59, 0xA5, 0xBA, 0x6B, 0xDE, 0x75, 0xFF, 0xDB, 0x7F,
  0xED, 0xFF, 0xF7, 0xFF, 0xFD, 0x7F, 0xFF, 0xFD, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFB,
  0xFF, 0xBF, 0xF7, 0xDF, 0xFB, 0xBF, 0x6D, 0xDF, 0xFF, 0xB7, 0x7F, 0xFF, 0x57, 0xBE, 0xD5, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0xEF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFE, 0xE9, 0xD4, 0x6B, 0x96, 0x79, 0xD7, 0xBD, 0xD7, 0xFD, 0xEF, 0xBD, 0xF7,
  0xDF, 0xFF, 0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFB, 0xEE, 0xFF, 0x77, 0xFD,
  0xFF, 0xDF, 0xF6, 0xEF, 0x7D, 0xEB, 0xFF, 0x56, 0xBD, 0xCB, 0xF5, 0xF6, 0xFD, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFE, 0xFF, 0xFA, 0xF7, 0xFD, 0xEF, 0xF7,
  0xDE, 0xEF, 0xFF, 0xBF, 0xEE, 0xFF, 0xDF, 0xBF, 0xFF, 0xDF, 0xFE, 0xBF, 0xFF, 0xAF, 0xFF, 0xDF,
  0xFB, 0xFF, 0xF6, 0xFF, 0xFB, 0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
};


const uint8_t  intro [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0x77, 0xff, 0xef, 0xee, 0xff, 0xef, 0xff, 0xff, 0xee, 0xff,
  0x77, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xde, 0xff, 0xbb, 0xfb, 0xff, 0xbb, 0xff, 0xbf, 0xbb,
  0xff, 0xdd, 0x5d, 0xff, 0xff, 0xff, 0xff, 0x75, 0xdb, 0xed, 0x6e, 0xff, 0xef, 0xff, 0xef,
  0xee, 0xff, 0x77, 0xf7, 0xff, 0xff, 0xff, 0x3f, 0xad, 0xff, 0x5a, 0xd5, 0xfd, 0x54, 0xff,
  0xbf, 0x55, 0xff, 0x55, 0x2d, 0xff, 0xff, 0xff, 0x3f, 0x00, 0xed, 0x04, 0xa0, 0xff, 0x01,
  0xff, 0x1b, 0x80, 0xfe, 0x00, 0x80, 0xfe, 0xff, 0xff, 0x9f, 0x52, 0xf6, 0xa1, 0x8a, 0xfd,
  0x28, 0xfe, 0x4f, 0x2a, 0xff, 0xa9, 0x12, 0xff, 0xff, 0xff, 0x1f, 0x08, 0xfc, 0x08, 0x20,
  0xff, 0x84, 0xfe, 0x0b, 0x01, 0xfe, 0x00, 0x40, 0xff, 0xff, 0xff, 0x4f, 0x42, 0xb0, 0x45,
  0x02, 0x7a, 0x21, 0xfe, 0x23, 0x48, 0xfc, 0x94, 0x14, 0xff, 0xff, 0xff, 0x0f, 0x28, 0xe9,
  0x01, 0x55, 0x7c, 0x08, 0xfd, 0x45, 0x05, 0xbd, 0x40, 0x49, 0xff, 0xff, 0xff, 0xaf, 0x3a,
  0xf0, 0x55, 0x07, 0xfd, 0x42, 0xfe, 0x09, 0x57, 0x7c, 0xc9, 0xff, 0xff, 0xff, 0xff, 0x0f,
  0x78, 0xe5, 0x03, 0x4d, 0x7c, 0x10, 0xfc, 0x23, 0x07, 0x7c, 0xe0, 0xff, 0xff, 0xff, 0xff,
  0x9f, 0x68, 0xa0, 0x11, 0x0f, 0x79, 0x84, 0xfc, 0x81, 0x97, 0x5c, 0xa5, 0xff, 0xff, 0xff,
  0xff, 0x1f, 0x72, 0xd5, 0x43, 0x16, 0x3c, 0x21, 0xfa, 0x15, 0x47, 0x7e, 0xd0, 0xfe, 0xff,
  0xff, 0xff, 0xbf, 0xd0, 0xff, 0x0b, 0x4d, 0x39, 0x88, 0xfc, 0x41, 0x17, 0xbc, 0xe4, 0xfd,
  0xff, 0xff, 0xff, 0x3f, 0x24, 0x68, 0x27, 0x0e, 0xbc, 0x12, 0xf8, 0x89, 0xef, 0x3f, 0x20,
  0xfe, 0xff, 0xff, 0xff, 0x3f, 0x91, 0xf2, 0x83, 0x2e, 0x39, 0x50, 0xea, 0x21, 0x7f, 0xaf,
  0x8a, 0xfc, 0xff, 0xff, 0xff, 0x7f, 0x04, 0xc0, 0x17, 0x0a, 0x38, 0x19, 0xf9, 0x85, 0xdf,
  0x3f, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x21, 0x49, 0x47, 0xae, 0x1a, 0x34, 0xf0, 0x91,
  0xf7, 0x2f, 0xa9, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x13, 0x84, 0x07, 0x10, 0xb8, 0x28, 0xd9,
  0xa0, 0x5f, 0x5f, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x47, 0x51, 0xad, 0x82, 0x1c, 0x52,
  0xf0, 0x85, 0xb3, 0x16, 0x55, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x83, 0x0f, 0x48, 0x9e,
  0x08, 0xe5, 0x91, 0x06, 0x5f, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x41, 0x13, 0x8f, 0x20,
  0x1f, 0x22, 0xf0, 0x84, 0x23, 0x16, 0xb2, 0xff, 0xff, 0xff, 0xff, 0xff, 0x95, 0x45, 0x4e,
  0xfe, 0x4f, 0x80, 0xa4, 0x91, 0x8b, 0x9e, 0xf8, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x81, 0x03,
  0x0f, 0xf8, 0x2f, 0x7d, 0xe0, 0x41, 0x43, 0x0f, 0xaa, 0xff, 0xff, 0xff, 0xff, 0xff, 0x13,
  0x55, 0x5e, 0xfa, 0x0f, 0x7c, 0xc9, 0x94, 0x12, 0x57, 0xf8, 0xfe, 0xff, 0xff, 0xff, 0xff,
  0x43, 0x00, 0x1f, 0xfc, 0x4f, 0xfe, 0xe0, 0x01, 0x81, 0x0f, 0x05, 0xfc, 0xff, 0xff, 0xff,
  0xff, 0x0f, 0x95, 0x9f, 0xf8, 0x0f, 0xfc, 0xc4, 0x4b, 0xd4, 0x27, 0x80, 0xfc, 0xff, 0xff,
  0xff, 0xff, 0x5f, 0xc0, 0x1f, 0xf9, 0xa7, 0xfe, 0xc8, 0x23, 0xe0, 0x8f, 0x14, 0xfe, 0xff,
  0xff, 0xff, 0xff, 0x3f, 0xc9, 0x3f, 0xf8, 0x07, 0xfe, 0xa2, 0x0f, 0xf5, 0x27, 0x40, 0xfe,
  0xff, 0xff, 0xff, 0xff, 0xff, 0x7e, 0xff, 0xef, 0xff, 0xff, 0xdd, 0xef, 0xdd, 0xdd, 0xbf,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xfb, 0x7f, 0xff, 0xff, 0xfb, 0xf7, 0xff,
  0xef, 0xfd, 0xff, 0xff, 0xab, 0xaf, 0xbf, 0xbd, 0xfd, 0xff, 0xeb, 0xff, 0xdb, 0xfe, 0xbf,
  0xf6, 0xfb, 0xf7, 0x6f, 0xd5, 0xff, 0x7b, 0xfb, 0xee, 0xde, 0xea, 0x5f, 0xff, 0xee, 0xfb,
  0xed, 0xdb, 0xaf, 0xde, 0xfd, 0xff, 0xd2, 0xa7, 0x9f, 0xad, 0xfe, 0xd5, 0xb3, 0xfe, 0x55,
  0xda, 0x2b, 0xd5, 0x6b, 0xf1, 0x37, 0xd1, 0x81, 0x13, 0x5e, 0x0c, 0xf4, 0xe8, 0x05, 0xff,
  0x00, 0xf0, 0x41, 0x80, 0x01, 0xe2, 0x1f, 0x84, 0xc9, 0x87, 0x1c, 0x98, 0xb8, 0xc2, 0x43,
  0xfc, 0xa4, 0xe2, 0x09, 0xea, 0x93, 0x48, 0x45, 0xa1, 0x03, 0x27, 0xb4, 0x18, 0xfa, 0xf0,
  0x11, 0xfe, 0x00, 0xc8, 0x21, 0xc1, 0x00, 0xc0, 0x13, 0x88, 0x13, 0x0f, 0x39, 0xba, 0x50,
  0xe4, 0x81, 0xec, 0xd4, 0xc0, 0x89, 0xbe, 0xd5, 0x92, 0x81, 0x03, 0x47, 0x4e, 0xb0, 0x30,
  0xe0, 0xe0, 0x29, 0xf8, 0xe0, 0xd2, 0xc0, 0xff, 0xc1, 0xc0, 0xa5, 0xd2, 0x07, 0x0e, 0x62,
  0x70, 0x65, 0xf2, 0x00, 0xfd, 0xe4, 0xc0, 0xa5, 0xfa, 0x50, 0xe4, 0xc0, 0x81, 0x4f, 0x5a,
  0x40, 0xf2, 0x40, 0xe0, 0x25, 0xe8, 0xe0, 0xe8, 0xc0, 0xbf, 0x44, 0xe1, 0x92, 0xfe, 0x0f,
  0x1c, 0x92, 0xa0, 0x48, 0xe9, 0x60, 0xf8, 0x64, 0xc2, 0x12, 0xf8, 0x00, 0xe8, 0x00, 0xf0,
  0x9f, 0x3c, 0x00, 0xe8, 0x01, 0xf0, 0x68, 0xd2, 0xe0, 0xe0, 0x00, 0x7c, 0x28, 0xfa, 0x49,
  0xf0, 0x1f, 0x68, 0x8a, 0xa0, 0x93, 0xf4, 0x60, 0xf0, 0xc8, 0xe8, 0x08, 0x5c, 0x82, 0xb8,
  0x01, 0xf5, 0x3f, 0x39, 0x10, 0xc2, 0x07, 0x70, 0x12, 0xe4, 0x60, 0x60, 0xe2, 0x7f, 0x30,
  0x70, 0x3b, 0xf0, 0x3f, 0x70, 0x31, 0xd0, 0x07, 0xf1, 0x80, 0xa0, 0xe4, 0xe4, 0xc0, 0x5a,
  0x28, 0x34, 0x30, 0xf8, 0x7f, 0x60, 0x60, 0x44, 0x4f, 0x78, 0x10, 0xe0, 0x20, 0x60, 0xb0,
  0x3f, 0x12, 0x38, 0x2a, 0xf9, 0x7f, 0xe2, 0x64, 0x81, 0x0f, 0x70, 0xf4, 0xc5, 0x60, 0x61,
  0xa1, 0x9a, 0x98, 0x3c, 0x08, 0xfc, 0xff, 0xa0, 0xc1, 0x80, 0x1f, 0x7a, 0xf0, 0xc1, 0x08,
  0x68, 0x08, 0x38, 0x18, 0x3c, 0x21, 0xfe, 0xff, 0xc8, 0xc1, 0x93, 0x3f, 0x38, 0xf0, 0x81,
  0x00, 0x78, 0x02, 0x18, 0x0c, 0x7c, 0x80, 0xff, 0xff, 0xc1, 0xd3, 0x03, 0x3f, 0x79, 0xfa,
  0xc9, 0x00, 0xfd, 0x80, 0x1c, 0x8c, 0x7e, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
